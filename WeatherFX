package com.example.weatherfx;

import javafx.animation.FadeTransition;
import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.VBox;
import javafx.scene.text.Font;
import javafx.stage.Stage;
import javafx.scene.layout.StackPane;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javafx.scene.media.MediaView;
import java.io.File;
import javafx.util.Duration;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Scanner;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;




public class WetterFX extends Application {
    private static final String API_KEY = "b20014fec8064d7eb3780143231306";

    public static void main(String[] args) {
        launch(args);
    }

    @Override
    public void start(Stage primaryStage) {
        primaryStage.setTitle("Wetter-App der Gruppe 4");

        FadeTransition fadeInTransition = new FadeTransition(Duration.millis(3000));
        fadeInTransition.setFromValue(0.0);
        fadeInTransition.setToValue(3.0);

        StackPane stackPane = new StackPane();

        String videoFile = "C:/Users/rvopilov/Downloads/Video/background.mp4";
        Media media = new Media(new File(videoFile).toURI().toString());

        MediaPlayer mediaPlayer = new MediaPlayer(media);
        mediaPlayer.setAutoPlay(true);
        mediaPlayer.setCycleCount(MediaPlayer.INDEFINITE);
        MediaView mediaView = new MediaView(mediaPlayer);
        mediaView.fitWidthProperty().bind(stackPane.widthProperty());
        mediaView.fitHeightProperty().bind(stackPane.heightProperty());

        stackPane.getChildren().add(mediaView);

        Label stadtLabel = new Label("Geben Sie die Stadt ein: " + "\n");
                stadtLabel.setFont(new Font("Agency FB",20));
                stadtLabel.setStyle("-fx-font-weight: bold");
                stadtLabel.setTranslateX(50);

        TextField cityTextField = new TextField();
                cityTextField.setFont(new Font("Agency FB", 20));
                //cityTextField.setStyle("-fx-font-weight: bold");
                cityTextField.setMaxWidth(240);
                cityTextField.setAlignment(Pos.CENTER);

        Button Suche = new Button("Suchen");
                Suche.setFont(new Font("Agency FB", 21));
                Suche.setTranslateX(238);
                Suche.setTranslateY(-59);



        Label resultLabel = new Label();


        VBox searchBox = new VBox(20);
        searchBox.setPadding(new Insets(20));
        searchBox.getChildren().addAll(stadtLabel, cityTextField, Suche, resultLabel);
        stackPane.getChildren().add(searchBox);


        Suche.setOnAction(e -> {
            String city = cityTextField.getText();
            if (!city.isEmpty()) {
                try {
                    String weatherData = getWeatherData(city);
                    String temperatur = parseTemperatureFromData(weatherData);
                    String niederschlag = parseNiederschlagFromData(weatherData);
                    String Sicht = parseSichtFromData(weatherData);
                    String GefuhltC = parseGefuhltFromData(weatherData);
                    String Wind = parseWindFromData(weatherData);
                    String Luftfeuchtigkeit = parseLuftfeuchteFromData(weatherData);
                    String uv = parseUVFromData(weatherData);
                    resultLabel.setFont(new Font("Agency FB", 20));
                    resultLabel.setStyle("-fx-font-weight: bold");
                    resultLabel.setText("Temperatur in " + city + ": " + temperatur + " °C" + "\n\nUV-Index: " + uv + "\n\nNiederschlag in " + city + ": " + niederschlag + " mm" + "\n\nSicht in " + city + ": " + Sicht + " km"  +
                            "\n\nGefühlt sind es in " + city + ": " + GefuhltC + " °C" + "\n\nWind weht mit: " + Wind + " km/h" + "\n\nLuftfeuchtigkeit in " +city + ": " + Luftfeuchtigkeit + " %" );
                    double niederschlagsWert = Double.parseDouble(niederschlag);
                    double uvwert = Double.parseDouble(uv);
                        if (niederschlagsWert > 1.5) {
                            try {
                                String weatherData2 = getWeatherData(city);
                                String temperatur2 = parseTemperatureFromData(weatherData2);
                                String niederschlag2 = parseNiederschlagFromData(weatherData2);
                                String Sicht2 = parseSichtFromData(weatherData2);
                                String GefuhltC2 = parseGefuhltFromData(weatherData2);
                                String Wind2 = parseWindFromData(weatherData2);
                                String Luftfeuchtigkeit2 = parseLuftfeuchteFromData(weatherData2);
                                String uv2 = parseUVFromData(weatherData2);
                                resultLabel.setFont(new Font("Agency FB", 20));
                                resultLabel.setStyle("-fx-font-weight: bold");
                                resultLabel.setText("Temperatur in " + city + ": " + temperatur2 + " °C" + "\n\nUV-Index: " + uv2 + "\n\nNiederschlag in " + city + ": " + niederschlag2 + " mm" + "\n\nNimm einen Regenschirm mit, Valera!" + "\n\nSicht in " + city + ": " + Sicht2 + " km" +
                                        "\n\nGefühlt sind es in " + city + ": " + GefuhltC2 + " °C" + "\n\nWind weht mit: " + Wind2 + " km/h" + "\n\nLuftfeuchtigkeit in " + city + ": " + Luftfeuchtigkeit2 + " %");
                            } catch (IOException ex) {
                                throw new RuntimeException(ex);
                            } catch (ParseException ex) {
                                throw new RuntimeException(ex);
                            }
                        }
                    if (uvwert > 2) {
                        try {
                            String weatherData3 = getWeatherData(city);
                            String temperatur3 = parseTemperatureFromData(weatherData3);
                            String niederschlag3 = parseNiederschlagFromData(weatherData3);
                            String Sicht3 = parseSichtFromData(weatherData3);
                            String GefuhltC3 = parseGefuhltFromData(weatherData3);
                            String Wind3 = parseWindFromData(weatherData3);
                            String Luftfeuchtigkeit3 = parseLuftfeuchteFromData(weatherData3);
                            String uv3 = parseUVFromData(weatherData3);
                            resultLabel.setFont(new Font("Agency FB", 20));
                            resultLabel.setStyle("-fx-font-weight: bold");
                            resultLabel.setText("Temperatur in " + city + ": " + temperatur3 + " °C" + "\n\nUV-Index: " + uv3 + "\n\nVergiss die Sonnencreme nicht" + "\n\nNiederschlag in " + city + ": " + niederschlag3 + " mm" + "\n\nSicht in " + city + ": " + Sicht3 + " km" +
                                    "\n\nGefühlt sind es in " + city + ": " + GefuhltC3 + " °C" + "\n\nWind weht mit: " + Wind3 + " km/h" + "\n\nLuftfeuchtigkeit in " + city + ": " + Luftfeuchtigkeit3 + " %");
                        } catch (IOException ex) {
                            throw new RuntimeException(ex);
                        } catch (ParseException ex) {
                            throw new RuntimeException(ex);
                        }
                    }
                    if (niederschlagsWert > 1.5 && uvwert > 2) {
                        try {
                            String weatherData4 = getWeatherData(city);
                            String temperatur4 = parseTemperatureFromData(weatherData4);
                            String niederschlag4 = parseNiederschlagFromData(weatherData4);
                            String Sicht4 = parseSichtFromData(weatherData4);
                            String GefuhltC4 = parseGefuhltFromData(weatherData4);
                            String Wind4 = parseWindFromData(weatherData4);
                            String Luftfeuchtigkeit4 = parseLuftfeuchteFromData(weatherData4);
                            String uv4 = parseUVFromData(weatherData4);
                            resultLabel.setFont(new Font("Agency FB", 20));
                            resultLabel.setStyle("-fx-font-weight: bold");
                            resultLabel.setText("Temperatur in " + city + ": " + temperatur4 + " °C" + "\n\nVergiss die Sonnencreme nicht" + "\n\nNiederschlag in " + city + ": " + niederschlag4 + " mm" + "\n\nNimm einen Regenschirm mit, Valera!" + "\n\nSicht in " + city + ": " + Sicht4 + " km" +
                                    "\n\nGefühlt sind es in " + city + ": " + GefuhltC4 + " °C" + "\n\nWind weht mit: " + Wind4 + " km/h" + "\n\nLuftfeuchtigkeit in " + city + ": " + Luftfeuchtigkeit4 + " %");
                        } catch (IOException ex) {
                            throw new RuntimeException(ex);
                        } catch (ParseException ex) {
                            throw new RuntimeException(ex);
                        }
                    }
                } catch (IOException | ParseException ex) {
                    resultLabel.setFont(new Font("Agency FB", 20));
                    resultLabel.setStyle("-fx-font-weight: bold");
                    resultLabel.setText("API ist mal wieder Scheiße");
                }
            }
        });

        stackPane.setOpacity(0.0);
        fadeInTransition.setNode(stackPane);
        fadeInTransition.play();


        Scene scene = new Scene(stackPane, 1280, 720);
        primaryStage.setScene(scene);
        primaryStage.show();

    }

    private String getWeatherData(String stadt) throws IOException {
        URL api = new URL("https://api.weatherapi.com/v1/current.json?q=" + stadt + "&key=" + API_KEY);
        HttpURLConnection conn = (HttpURLConnection) api.openConnection();
        conn.setRequestMethod("GET");
        conn.connect();

        int check = conn.getResponseCode();
        if (check == 200) {
            StringBuilder weatherData = new StringBuilder();
            Scanner input = new Scanner(api.openStream());
            while (input.hasNext()) {
                weatherData.append(input.nextLine());
            }
            input.close();
            return weatherData.toString();
        } else {
            throw new IOException("Fehler: " + check);
        }
    }

    private String parseTemperatureFromData(String weatherData) throws ParseException {
        JSONParser parser = new JSONParser();
        JSONObject data = (JSONObject) parser.parse(weatherData);
        JSONObject current = (JSONObject) data.get("current");
        double tempC = (double) current.get("temp_c");
        return Double.toString(tempC);
    }


    private String parseNiederschlagFromData(String weatherData) throws ParseException {
        JSONParser parser2 = new JSONParser();
        JSONObject data2 = (JSONObject) parser2.parse(weatherData);
        JSONObject current2 = (JSONObject) data2.get("current");
        double nieder = (double) current2.get("precip_mm");
        return Double.toString(nieder);


    }

    private String parseSichtFromData(String weatherData) throws ParseException {
        JSONParser parser3 = new JSONParser();
        JSONObject data3 = (JSONObject) parser3.parse(weatherData);
        JSONObject current3 = (JSONObject) data3.get("current");
        double sicht = (double) current3.get("vis_km");
        return Double.toString(sicht);

    }

    private String parseGefuhltFromData(String weatherData) throws ParseException {
        JSONParser parser4 = new JSONParser();
        JSONObject data4 = (JSONObject) parser4.parse(weatherData);
        JSONObject current4 = (JSONObject) data4.get("current");
        double feelslike = (double) current4.get("feelslike_c");
        return Double.toString(feelslike);
    }

    private String parseWindFromData(String weatherData) throws ParseException {
        JSONParser parser5 = new JSONParser();
        JSONObject data5 = (JSONObject) parser5.parse(weatherData);
        JSONObject current5 = (JSONObject) data5.get("current");
        double wind = (double) current5.get("wind_kph");
        return Double.toString(wind);


    }

    private String parseLuftfeuchteFromData(String weatherData) throws ParseException {
        JSONParser parser6 = new JSONParser();
        JSONObject data6 = (JSONObject) parser6.parse(weatherData);
        JSONObject current6 = (JSONObject) data6.get("current");
        Long Feuchte = (Long) current6.get("humidity");
        return Long.toString(Feuchte);


    }
    private String parseUVFromData(String weatherData) throws ParseException {
        JSONParser parser7 = new JSONParser();
        JSONObject data7 = (JSONObject) parser7.parse(weatherData);
        JSONObject current7 = (JSONObject) data7.get("current");
        Double uvin = (Double) current7.get("uv");
        return Double.toString(uvin);


    }

}
